diff --git a/src/com/bel/android/dspmanager/service/HeadsetService.java b/src/com/bel/android/dspmanager/service/HeadsetService.java
index 26b5b11..e5bdfb1 100644
--- a/src/com/bel/android/dspmanager/service/HeadsetService.java
+++ b/src/com/bel/android/dspmanager/service/HeadsetService.java
@@ -11,7 +11,6 @@ import android.media.AudioManager;
 import android.media.audiofx.AudioEffect;
 import android.media.audiofx.BassBoost;
 import android.media.audiofx.Equalizer;
-import android.media.audiofx.StereoWide;
 import android.media.audiofx.Virtualizer;
 import android.os.Binder;
 import android.os.IBinder;
@@ -59,7 +58,6 @@ public class HeadsetService extends Service {
         /**
          * Session-specific bassboost
          */
-        private final BassBoost mBassBoost;
         /**
          * Session-specific virtualizer
          */
@@ -67,8 +65,6 @@ public class HeadsetService extends Service {
         /**
          * Session-specific stereo widener
          */
-        private final StereoWide mStereoWide;
-
         protected EffectSet(int sessionId) {
             try {
                 /*
@@ -82,17 +78,13 @@ public class HeadsetService extends Service {
                 throw new RuntimeException(e);
             }
             mEqualizer = new Equalizer(0, sessionId);
-            mBassBoost = new BassBoost(0, sessionId);
             mVirtualizer = new Virtualizer(0, sessionId);
-            mStereoWide = new StereoWide(0, sessionId);
         }
 
         protected void release() {
             mCompression.release();
             mEqualizer.release();
-            mBassBoost.release();
             mVirtualizer.release();
-            mStereoWide.release();
         }
 
         /**
@@ -219,8 +211,6 @@ public class HeadsetService extends Service {
             } else if (action.equals(BluetoothDevice.ACTION_ACL_CONNECTED)
                     || action.equals(BluetoothDevice.ACTION_ACL_DISCONNECTED)) {
                 mUseBluetooth = audioManager.isBluetoothA2dpOn();
-            } else if (action.equals(Intent.ACTION_ANALOG_AUDIO_DOCK_PLUG)) {
-                mUseUSB = intent.getIntExtra("state", 0) == 1;
             } else if (action.equals(AudioManager.ACTION_AUDIO_BECOMING_NOISY)) {
                 mUseBluetooth = audioManager.isBluetoothA2dpOn();
                 mUseHeadset = audioManager.isWiredHeadsetOn();
@@ -249,7 +239,6 @@ public class HeadsetService extends Service {
         final IntentFilter intentFilter = new IntentFilter(Intent.ACTION_HEADSET_PLUG);
         intentFilter.addAction(BluetoothDevice.ACTION_ACL_CONNECTED);
         intentFilter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED);
-        intentFilter.addAction(Intent.ACTION_ANALOG_AUDIO_DOCK_PLUG);
         intentFilter.addAction(AudioManager.ACTION_AUDIO_BECOMING_NOISY);
         registerReceiver(mRoutingReceiver, intentFilter);
 
@@ -346,11 +335,6 @@ public class HeadsetService extends Service {
         EffectSet.setParameter(session.mCompression, 0,
                 Short.valueOf(preferences.getString("dsp.compression.mode", "0")));
 
-        session.mBassBoost.setEnabled(preferences.getBoolean("dsp.bass.enable", false));
-        session.mBassBoost.setStrength(Short.valueOf(preferences.getString("dsp.bass.mode", "0")));
-        session.mBassBoost.setCenterFrequency(
-                Short.valueOf(preferences.getString("dsp.bass.freq", "55")));
-
         /* Equalizer state is in a single string preference with all values separated by ; */
         session.mEqualizer.setEnabled(preferences.getBoolean("dsp.tone.enable", false));
         if (mOverriddenEqualizerLevels != null) {
@@ -372,8 +356,5 @@ public class HeadsetService extends Service {
         session.mVirtualizer.setStrength(
                 Short.valueOf(preferences.getString("dsp.headphone.mode", "0")));
 
-        session.mStereoWide.setEnabled(preferences.getBoolean("dsp.stereowide.enable", false));
-        session.mStereoWide.setStrength(
-                Short.valueOf(preferences.getString("dsp.stereowide.mode", "0")));
     }
 }
